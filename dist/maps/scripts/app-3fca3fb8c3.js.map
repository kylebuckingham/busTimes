{"version":3,"sources":["scripts/app-3fca3fb8c3.js"],"names":["angular","module","dataService","$http","$q","$log","$timeout","$location","$rootScope","getData","times","deferred","defer","queryStr","start","end","get","then","data","resolve","error","promise","$inject","service","MainController","$scope","NgMap","loading","point","routesIds","indexOf","routeid","push","routes","i","id","label","processData","mapData","weight","parseInt","stopdeviationinseconds","lateness","selectedRoutes","location","google","maps","LatLng","lat","lon","vm","ready","this","possibleTimes","$on","event","map","busTimesMap","mOptions","enableSearch","scrollable","scrollableHeight","mTexts","buttonDefaultText","$watch","newVal","oldVal","match","badTime","showInfoWindow","p","infowindow","InfoWindow","center","setContent","setPosition","open","controller","filter","input","Number","substring","length","obj","key","size","hasOwnProperty","rdd","ms","Date","toString","bytes","parseFloat","toFixed","str","encodeURIComponent","num","d","h","m","s","newDate","t","count","Math","floor","addKey","Object","keys","defineProperty","enumerable","value","replace","millseconds","arr","field","_","uniq","a","runBlock","debug","run","routeConfig","$routeProvider","when","templateUrl","controllerAs","otherwise","redirectTo","config","$logProvider","debugEnabled","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,YACJ,YACA,YACA,UACA,aACA,aACA,SACA,aACA,UACA,eACA,QACA,sCAKR,WACI,YAOA,SAASC,GAAYC,EAAOC,EAAIC,EAAMC,EAAUC,EAAWC,GAevD,OAEIC,QAAS,SAASC,GAEd,GAAIC,GAAWP,EAAGQ,QAEdC,EAAW,6EAA+EH,EAAMI,MAAQ,QAAUJ,EAAMK,GAa5H,OATAZ,GAAMa,IAAIH,GAETI,KAAK,SAASC,GACXP,EAASQ,QAAQD,KAHrBf,SAIS,SAASiB,GACdf,EAAKe,MAAMA,GACXT,EAASQ,QAAQ,QAGdR,EAASU,UAvC5BnB,EAAYoB,SAAW,QAAS,KAAM,OAAQ,WAAY,YAAa,cAAvEtB,QACKC,OAAO,YACPsB,QAAQ,cAAerB,MA0ChC,WACI,YAOA,SAASsB,GAAeC,EAAQvB,EAAawB,GA6BzC,QAASjB,KAELgB,EAAOE,SAAU,EACjBzB,EAAYO,QAAQgB,EAAOf,OAAOO,KAAK,SAASC,GAC5CO,EAAOE,SAAU,EACjBF,EAAOP,KAAOA,EAAKA,IAGnB,KAAK,GAAIU,KAASH,GAAOP,KACwC,KAAzDO,EAAOI,UAAUC,QAAQL,EAAOP,KAAKU,GAAOG,UAC5CN,EAAOI,UAAUG,KAAKP,EAAOP,KAAKU,GAAOG,QAKjDN,GAAOQ,SACP,KAAK,GAAIC,KAAKT,GAAOI,UACjBJ,EAAOQ,OAAOD,MACVG,GAAIV,EAAOI,UAAUK,GACrBE,MAAOX,EAAOI,UAAUK,IAGhCG,OAIR,QAASA,KAELZ,EAAOa,UAEP,KAAK,GAAIV,KAASH,GAAOP,KAAK,CAC1B,GAAIqB,GAASC,SAASf,EAAOP,KAAKU,GAAOa,uBAEzC,IAAIhB,EAAOiB,SAAYH,EAAS,GAG5B,IAAK,GAAIL,KAAKT,GAAOkB,eACblB,EAAOkB,eAAeT,GAAGC,KAAOV,EAAOP,KAAKU,GAAOG,SACnDN,EAAOa,QAAQN,MACXY,SAAU,GAAIC,QAAOC,KAAKC,OAAOtB,EAAOP,KAAKU,GAAOoB,IAAKvB,EAAOP,KAAKU,GAAOqB,KAC5EV,OAAQA,EAAS,GACjBS,IAAKvB,EAAOP,KAAKU,GAAOoB,IACxBC,IAAKxB,EAAOP,KAAKU,GAAOqB,IACxBd,GAAIV,EAAOP,KAAKU,GAAOG,UAO3CmB,EAAGC,OAAQ,EA7Ef,GAAaD,GAAKE,IAClB3B,GAAOa,WACPb,EAAO4B,eAAiB,QAAS,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,QAAQ,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,SAC/L5B,EAAOf,OACHI,MAAO,OACPC,IAAK,QAGTU,EAAOiB,SAAW,EAElBjB,EAAO6B,IAAI,iBAAkB,SAAUC,EAAOC,GAC3C/B,EAAOgC,YAAcD,IAIxB/B,EAAOkB,kBACPlB,EAAOQ,UACPR,EAAOI,aACPJ,EAAOiC,UACHC,cAAc,EACdC,YAAY,EACZC,iBAAkB,SAEtBpC,EAAOqC,QACHC,kBAAmB,mBAwDvBtC,EAAOuC,OAAO,iBAAkB,SAASC,EAAQC,GACzCD,IAAWC,GACX7B,MAEL,GAEHZ,EAAOuC,OAAO,QAAS,SAASC,EAAQC,GACpC,GAAID,IAAWC,EAAO,CAClB,GAAIpD,GAAQ0B,SAASf,EAAOf,MAAMI,MAAMqD,MAAM,QAC1CpD,EAAMyB,SAASf,EAAOf,MAAMK,IAAIoD,MAAM,OAGF,KAApC1C,EAAOf,MAAMI,MAAMgB,QAAQ,QAC3BhB,GAAS,IAEyB,IAAlCW,EAAOf,MAAMK,IAAIe,QAAQ,QACzBf,GAAO,IAGPD,EAAQC,EACRU,EAAO2C,SAAU,GAEjB3C,EAAO2C,SAAU,EACjB3D,QAIT,GAEHgB,EAAOuC,OAAO,WAAY,SAASC,EAAQC,GACnCD,IAAWC,GACX7B,MAKRZ,EAAO4C,eAAiB,SAAUd,EAAOe,GACrC,GAAIC,GAAa,GAAI1B,QAAOC,KAAK0B,WAC7BC,EAAS,GAAI5B,QAAOC,KAAKC,OAAOuB,EAAEtB,IAAIsB,EAAErB,IAC5CsB,GAAWG,WAAW,6BAA+BJ,EAAEnC,GAAK,2CAA6D,GAAXmC,EAAE/B,OAAc,0CAAiD+B,EAAEtB,IAAM,IAAMsB,EAAErB,IAAM,sBACrMsB,EAAWI,YAAYF,GACvBF,EAAWK,KAAKnD,EAAOgC,cAI1BhD,IAnILe,EAAeF,SAAW,SAAU,cAAe,SADnDtB,QACKC,OAAO,YACP4E,WAAW,iBAAkBrD,MAuItC,WACI,YAEAxB,SAAQC,OAAO,oBAEd6E,OAAO,KAAM,WACV,MAAO,UAASC,GACZ,MAAOC,QAAOD,EAAME,UAAU,EAAGF,EAAMG,OAAS,OAIvDJ,OAAO,QAAS,WACb,MAAO,UAASK,GACZ,GACIC,GADAC,EAAO,CAEX,KAAKD,IAAOD,GACJA,EAAIG,eAAeF,IACnBC,GAGR,OAAOA,MAIdP,OAAO,UAAW,WACf,MAAO,UAASS,GACZ,MAAIA,GACmC,KAA/BA,EAAIzD,QAAQ,eACL,YAC0B,KAA1ByD,EAAIzD,QAAQ,UACZ,MACkC,KAAlCyD,EAAIzD,QAAQ,kBACZ,eAC6B,KAA7ByD,EAAIzD,QAAQ,aACZ,SAC4B,KAA5ByD,EAAIzD,QAAQ,YACZ,WADJ,OAIA,UAMlBgD,OAAO,UAAW,WACf,MAAO,UAASU,GACZ,MAAO,IAAKC,MAAKD,GAAKE,cAI7BZ,OAAO,YAAa,WACjB,MAAO,UAASa,GACZ,MAAOC,YAAWD,EAAQ,KAAO,MAAME,QAAQ,MAItDf,OAAO,SAAU,WACd,MAAO,UAASgB,GACZ,MAAOC,oBAAmBD,MAIjChB,OAAO,aAAc,WAClB,MAAO,UAASgB,EAAKZ,GACjB,MAAOY,GAAIb,UAAU,EAAGC,GAAU,SAIzCJ,OAAO,cAAe,WACnB,MAAO,UAASC,EAAO5C,GACnB,GAAID,EACJ,KAAKA,IAAK6C,GACN,GAAIA,EAAM7C,GAAGC,KAAOA,EAChB,OAAO,CAGf,QAAO,KAId2C,OAAO,eAAgB,WACpB,MAAO,UAASkB,GAEZ,GAAItF,IACAuF,EAAG,MACHC,EAAG,KACHC,EAAG,IACHC,EAAG,IACHZ,GAAI,GACLa,EAAU,EAEb,KAAK,GAAIC,KAAK5F,GACV,GAAIsF,EAAMtF,EAAM4F,IAAM,EAAE,CACpB,GAAIC,GAAQC,KAAKC,MAAMT,EAAMtF,EAAM4F,GACnCN,IAAaO,EAAQ7F,EAAM4F,GAC3BD,GAAWE,EAAQD,EAAI,IAI/B,MAAOD,MAKdvB,OAAO,UAAW,WACf,MAAO,UAASK,EAAKuB,GACjB,MAAIA,MAAW,EACJC,OAAOC,KAAKzB,GAAK3B,IAAI,SAAS4B,GACjC,MAAOD,GAAIC,KAGRuB,OAAOC,KAAKzB,GAAK3B,IAAI,SAAS4B,GACjC,MAAwB,gBAAbD,GAAIC,GACJuB,OAAOE,eAAe1B,EAAIC,GAAM,QACnC0B,YAAY,EACZC,MAAO3B,IAHf,YAWfN,OAAO,WAAY,WAChB,MAAO,UAASC,GACZ,MAAOA,GAAMiC,QAAQ,MAAO,OAInClC,OAAO,sBAAuB,WAC3B,MAAO,UAASmC,GAEZ,MAAoB,MAAhBA,EACO,WACgB,OAAhBA,EACA,QACgB,QAAhBA,EACA,SACgB,SAAhBA,EACA,SADJ,UAOdnC,OAAO,SAAU,WACd,MAAO,UAAUoC,EAAKC,GAClB,MAAOC,GAAEC,KAAKH,EAAK,SAASI,GAAK,MAAOA,GAAEH,WAKtD,WACE,YAOA,SAASI,GAASlH,GAEhBA,EAAKmH,MAAM,gBALbD,EAASjG,SAAW,QAFpBtB,QACGC,OAAO,YACPwH,IAAIF,MAUT,WACE,YAMA,SAASG,GAAYC,GACnBA,EACGC,KAAK,KACJC,YAAa,qBACbhD,WAAY,iBACZiD,aAAc,OAEfC,WACCC,WAAY,MATlBN,EAAYpG,SAAW,kBAHvBtB,QACGC,OAAO,YACPgI,OAAOP,MAgBZ,WACE,YAEA1H,SACGC,OAAO,eAIZ,WACE,YAOA,SAASgI,GAAOC,GAEdA,EAAaC,cAAa,GAH5BF,EAAO3G,SAAW,gBAJlBtB,QACGC,OAAO,YACPgI,OAAOA,MAWZjI,QAAQC,OAAO,YAAYwH,KAAK,iBAAkB,SAASW,GAAiBA,EAAeC,IAAI,qBAAqB","file":"scripts/app-3fca3fb8c3.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('frontend',[\n        'ngAnimate',\n        'ngCookies',\n        'ngTouch',\n        'ngSanitize',\n        'ngMessages',\n        'ngAria',\n        'ngResource',\n        'ngRoute',\n        'ui.bootstrap',\n        'ngMap',\n        'angularjs-dropdown-multiselect'\n    ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('frontend')\n        .service('dataService', dataService);\n\n    /** @ngInject */\n    function dataService($http, $q, $log, $timeout, $location, $rootScope) {\n\n        // var serialize = function(obj, prefix) {\n        //   var str = [];\n        //   for(var p in obj) {\n        //     if (obj.hasOwnProperty(p)) {\n        //       var k = prefix ? prefix + \"[\" + p + \"]\" : p, v = obj[p];\n        //       str.push(typeof v == \"object\" ?\n        //         serialize(v, k) :\n        //         encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n        //     }\n        //   }\n        //   return str.join(\"&\");\n        // }\n\n        return {\n            // User Data\n            getData: function(times){\n\n                var deferred = $q.defer();\n\n                var queryStr = 'https://3zstizfpne.execute-api.us-west-2.amazonaws.com/prod/records?start=' + times.start + '&end=' + times.end;\n\n                // Uncomment for testing\n                // $http.get('app/components/dataServices/data.json')\n                $http.get(queryStr) // comment out for testing\n\n                .then(function(data) {\n                    deferred.resolve(data);\n                }).catch(function(error) {\n                    $log.error(error);\n                    deferred.resolve(null);\n                });\n\n                return deferred.promise;\n            }\n        };\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('frontend')\n        .controller('MainController', MainController);\n\n    /** @ngInject */\n    function MainController($scope, dataService, NgMap) {\n\n        var mapData, vm = this;\n        $scope.mapData = [];\n        $scope.possibleTimes = ['12 am', '1 am','2 am','3 am','4 am','5 am','6 am','7 am','8 am','9 am','10 am','11 am','12 pm','1 pm','2 pm','3 pm','4 pm','5 pm','6 pm','7 pm','8 pm','9 pm','10 pm','11 pm']\n        $scope.times = {\n            start: '6 am',\n            end: '9 am'\n        }\n\n        $scope.lateness = 0;\n\n        $scope.$on('mapInitialized', function (event, map) {\n           $scope.busTimesMap = map;\n        });\n\n        // Multi-select params\n        $scope.selectedRoutes = [];\n        $scope.routes = [];\n        $scope.routesIds = [];\n        $scope.mOptions = {\n            enableSearch: true,\n            scrollable: true,\n            scrollableHeight: '500px'\n        }\n        $scope.mTexts = {\n            buttonDefaultText: 'Select Route(s)'\n        }\n\n        function getData(){\n\n            $scope.loading = true;\n            dataService.getData($scope.times).then(function(data){\n                $scope.loading = false;\n                $scope.data = data.data;\n\n                // Process points\n                for (var point in $scope.data){\n                    if ($scope.routesIds.indexOf($scope.data[point].routeid) === -1){\n                        $scope.routesIds.push($scope.data[point].routeid);\n                    }\n                }\n\n                // process routes\n                $scope.routes = [];\n                for (var i in $scope.routesIds){\n                    $scope.routes.push({\n                        id: $scope.routesIds[i],\n                        label: $scope.routesIds[i]\n                    });\n                }\n                processData();\n            });\n        }\n\n        function processData(){\n\n            $scope.mapData = [];\n\n            for (var point in $scope.data){\n                var weight = parseInt($scope.data[point].stopdeviationinseconds);\n\n                if ($scope.lateness < (weight / 60)){\n\n                    // if point in route ids\n                    for (var i in $scope.selectedRoutes){\n                        if ($scope.selectedRoutes[i].id === $scope.data[point].routeid){\n                            $scope.mapData.push({\n                                location: new google.maps.LatLng($scope.data[point].lat, $scope.data[point].lon),\n                                weight: weight / 60,\n                                lat: $scope.data[point].lat,\n                                lon: $scope.data[point].lon,\n                                id: $scope.data[point].routeid\n                            });\n                        }\n                    }\n                }\n            }\n\n            vm.ready = true;\n        }\n\n        $scope.$watch('selectedRoutes', function(newVal, oldVal) {\n            if (newVal !== oldVal){\n                processData();\n            }\n        }, true);\n\n        $scope.$watch('times', function(newVal, oldVal) {\n            if (newVal !== oldVal){\n                var start = parseInt($scope.times.start.match(/\\d+/))\n                var end = parseInt($scope.times.end.match(/\\d+/))\n\n                // convert to military time\n                if ($scope.times.start.indexOf('pm') != -1){\n                    start += 12;\n                }\n                if ($scope.times.end.indexOf('pm') != -1){\n                    end += 12;\n                }\n\n                if (start > end){\n                    $scope.badTime = true;\n                } else {\n                    $scope.badTime = false;\n                    getData();\n                }\n\n            }\n        }, true);\n\n        $scope.$watch('lateness', function(newVal, oldVal) {\n            if (newVal !== oldVal){\n                processData();\n            }\n        });\n\n        // map marker popups\n        $scope.showInfoWindow = function (event, p) {\n            var infowindow = new google.maps.InfoWindow();\n            var center = new google.maps.LatLng(p.lat,p.lon);\n            infowindow.setContent('<div><span><b>Route:  </b>' + p.id + '</span><br/>' + '<span><b>Late(median):</b>  ' + p.weight * 60 + ' sec</span><br/>' + '<span><b>Lat/Lon:</b>  ' + p.lat + ' ' + p.lon + '</span><br/></div>');\n            infowindow.setPosition(center);\n            infowindow.open($scope.busTimesMap);\n         };\n\n         // init\n         getData()\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular.module('customFilters', [])\n\n    .filter('mn', function() {\n        return function(input) {\n            return Number(input.substring(0, input.length - 2));\n        };\n    })\n\n    .filter('sizer', function() {\n        return function(obj) {\n            var size = 0,\n                key;\n            for (key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    size++;\n                }\n            }\n            return size;\n        };\n    })\n\n    .filter('getType', function() {\n        return function(rdd) {\n            if (rdd) {\n                if (rdd.indexOf('ShardMapRDD') !== -1) {\n                    return 'Shard Map';\n                } else if (rdd.indexOf('MapRDD') !== -1) {\n                    return 'Map';\n                } else if (rdd.indexOf('ShardReduceRDD') !== -1) {\n                    return 'Shard Reduce';\n                } else if (rdd.indexOf('FilterRDD') !== -1) {\n                    return 'Filter';\n                } else if (rdd.indexOf('SliceRDD') !== -1) {\n                    return 'SliceRDD';\n                }\n            } else {\n                return 'Idle';\n            }\n\n        };\n    })\n\n    .filter('getDate', function() {\n        return function(ms) {\n            return (new Date(ms)).toString();\n        };\n    })\n\n    .filter('bytesToMB', function() {\n        return function(bytes) {\n            return parseFloat(bytes / 1024 / 1024).toFixed(2);\n        };\n    })\n\n    .filter('encode', function() {\n        return function(str) {\n            return encodeURIComponent(str);\n        };\n    })\n\n    .filter('shortenStr', function() {\n        return function(str, length) {\n            return str.substring(0, length) + '...';\n        };\n    })\n\n    .filter('isDuplicate', function() {\n        return function(input, id) {\n            var i;\n            for (i in input) {\n                if (input[i].id === id) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    })\n\n    .filter('millisToTime', function() {\n        return function(num) {\n                \n            var times = {\n                d: 86400000,\n                h: 3600000,\n                m: 60000,\n                s: 1000,\n                ms: 1\n            }, newDate = '';\n\n            for (var t in times){\n                if (num / times[t] >= 1){\n                    var count = Math.floor(num / times[t]);\n                    num = num - (count * times[t]);\n                    newDate += count + t + ' ';\n                }\n            }\n\n            return newDate;\n        };\n    })\n\n    // Execution Server\n    .filter('toArray', function() {\n        return function(obj, addKey) {\n            if (addKey === false) {\n                return Object.keys(obj).map(function(key) {\n                    return obj[key];\n                });\n            } else {\n                return Object.keys(obj).map(function(key) {\n                    if (typeof obj[key] === 'object') {\n                        return Object.defineProperty(obj[key], '$key', {\n                            enumerable: false,\n                            value: key\n                        });\n                    }\n                });\n            }\n        };\n    })\n\n    .filter('alphaNum', function() {\n        return function(input) {\n            return input.replace(/\\W/g, '');\n        };\n    })\n\n    .filter('secondsToTimeString', function() {\n        return function(millseconds) {\n\n            if (millseconds === '0') {\n                return 'All Time';\n            } else if (millseconds === '60') {\n                return '1 min';\n            } else if (millseconds === '600') {\n                return '10 min';\n            } else if (millseconds === '3600') {\n                return '1 hour';\n            }\n\n        };\n    })\n\n    .filter('unique', function() {\n        return function (arr, field) {\n            return _.uniq(arr, function(a) { return a[field]; });\n        };\n    });\n\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frontend')\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n  }\n\n})();\n\nangular.module(\"frontend\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container\\\"><div class=\\\"cssload-dots\\\" ng-if=\\\"loading\\\"><div class=\\\"cssload-dot\\\"></div><div class=\\\"cssload-dot\\\"></div><div class=\\\"cssload-dot\\\"></div><div class=\\\"cssload-dot\\\"></div><div class=\\\"cssload-dot\\\"></div></div><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><defs><filter id=\\\"goo\\\"><fegaussianblur in=\\\"SourceGraphic\\\" result=\\\"blur\\\" stddeviation=\\\"12\\\"></fegaussianblur><fecolormatrix in=\\\"blur\\\" mode=\\\"matrix\\\" values=\\\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 18 -7\\\" result=\\\"goo\\\"></fecolormatrix></filter></defs></svg><map zoom=\\\"11\\\" id=\\\"map\\\" center=\\\"[47.609722,-122.333056]\\\" ng-if=\\\"vm.ready\\\"><marker ng-if=\\\"marks === true && mapData\\\" ng-repeat=\\\"pos in mapData\\\" position=\\\"{{pos.lat}},{{pos.lon}}\\\" on-click=\\\"showInfoWindow(event, pos)\\\"></marker><heatmap-layer ng-if=\\\"heat === true && mapData\\\" data=\\\"mapData\\\" id=\\\"foo\\\"></heatmap-layer></map><div class=\\\"controls\\\"><div class=\\\"choseTime\\\"><select name=\\\"start\\\" ng-options=\\\"time for time in possibleTimes\\\" ng-model=\\\"times.start\\\"></select>to<select name=\\\"end\\\" ng-options=\\\"time for time in possibleTimes\\\" ng-model=\\\"times.end\\\"></select><div><span ng-if=\\\"badTime\\\">Start must become before end</span></div></div><div><span>Lateness (min)</span> <input type=\\\"number\\\" id=\\\"lateness\\\" name=\\\"quantity\\\" min=\\\"0\\\" ng-model=\\\"lateness\\\"></div><div ng-dropdown-multiselect=\\\"\\\" options=\\\"routes\\\" selected-model=\\\"selectedRoutes\\\" extra-settings=\\\"mOptions\\\" translation-texts=\\\"mTexts\\\"></div><div><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"marks = !marks\\\">Markers</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"heat = !heat\\\">HeatMap</button></div></div></div>\");}]);"],"sourceRoot":"/source/"}